package com.bookstore.controller;


import java.util.HashSet;
import java.util.Locale;
import java.util.Set;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import com.bookstore.domain.User;
import com.bookstore.domain.security.PasswordResetToken;
import com.bookstore.domain.security.Role;
import com.bookstore.domain.security.UserRole;
import com.bookstore.service.UserService;
import com.bookstore.service.impl.UserSecurityService;
import com.bookstore.utility.SecurityUtility;

@Controller
public class HomeController {
	
	@Autowired
	private UserService userService;
	
	@Autowired
	private UserSecurityService userSecurityService;
	
	@RequestMapping("/")
	public String index()
	{
		return "index";
	}
	
	@RequestMapping("/login")
	public String login(Model model)
	{
		model.addAttribute("classActiveLogin",true);
		return "myAccount";
	}
	
	@RequestMapping("/newUser")
	public String newUser(Locale locale,@RequestParam("token") String token,Model model) {
		
		PasswordResetToken passToken=userService.getPasswordResetToken(token);
		
		if(passToken==null)
		{
			String message="Invalid Token";
			model.addAttribute("message", message);
			return "redirect:/badRequest";
		}
		
		User user=passToken.getUser();
		
		String username=user.getUsername();
		
		UserDetails userDetails=userSecurityService.loadUserByUsername(username);
		
		model.addAttribute("classActiveNewAccount",true);
		return "myAccount";
	}
	
	@RequestMapping("/forgotPassword")
	public String forgotPassword(Model model)
	{
		model.addAttribute("classActiveForgetPassword",true);
		return "myAccount";
	}
}
